openapi: 3.0.3
info:
  title: ft_transcendence_api
  version: 0.0.1
  description: ft_transcendenceのバックエンドAPIドキュメント
servers:
  - url: http://localhost:3000
tags:
  - name: authentication
    description: 認証関連API
  - name: user
    description: ユーザー関連API
  - name: game
    description: ゲーム関連API
  - name: tournament
    description: トーナメント関連API
  - name: internal
    description: 内部API（サーバー間通信専用）

paths:
  /api/auth/login:
    post:
      tags:
        - authentication
      summary: ログイン/登録API
      description: 42アプリのcallbackに含まれるcodeを用いてログインまたは登録を行い、JWTトークンを発行します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: 42アプリのcallbackに含まれるcode
              required:
                - code
      responses:
        '200':
          description: 成功時、JWTトークンまたはMFAチケットをhttpOnly cookieに設定します。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'

  /api/auth/2fa/generate:
    get:
      tags:
        - authentication
      summary: 2要素認証用シークレット生成
      description: ログイン中のユーザー向けに2要素認証用のシークレットとQRコードを発行します。
      security:
        - cookieAuth: []
      responses:
        '200':
          description: シークレット生成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwoFactorSetupResponse'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/2fa/enable:
    post:
      tags:
        - authentication
      summary: 2要素認証有効化
      description: QRコード経由で取得したワンタイムパスコードを検証し、2要素認証を有効化します。
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwoFactorTokenRequest'
      responses:
        '200':
          description: 2要素認証を有効化しました。
        '400':
          description: 入力値が不正または2要素認証が既に有効です。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/2fa/remove:
    post:
      tags:
        - authentication
      summary: 2要素認証無効化
      description: 現在のワンタイムパスコードを検証し、登録済みの2要素認証情報を削除します。
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwoFactorTokenRequest'
      responses:
        '200':
          description: 2要素認証を無効化しました。
        '400':
          description: 2要素認証が設定されていない、またはトークンが不正です。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/2fa/validate:
    post:
      tags:
        - authentication
      summary: 2要素認証トークン検証
      description: MFAチケットとTOTPコードを検証し、セッショントークンを発行します。
      security:
        - mfaTicket: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwoFactorTokenRequest'
      responses:
        '200':
          description: 検証結果
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwoFactorValidateResponse'
        '400':
          description: 2要素認証が未設定です。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/user/me:
    get:
      tags:
        - user
      summary: 現在のユーザー情報取得
      description: JWTトークンから現在ログイン中のユーザー情報を取得します。
      security:
        - cookieAuth: []
      responses:
        '200':
          description: ユーザー情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: ユーザーが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/user/{id}:
    get:
      tags:
        - user
      summary: 指定ユーザー情報取得
      description: 指定されたIDのユーザー情報を取得します。
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ユーザーID
      responses:
        '200':
          description: ユーザー情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/tournaments:
    post:
      tags:
        - tournament
      summary: トーナメント作成
      description: 新しいトーナメントを作成します。
      security:
        - cookieAuth: []
        - testUserAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: トーナメント名
                gameOptions:
                  type: object
                  description: ゲームオプション
                  properties:
                    ballSpeed:
                      type: number
                      description: ボールの速度（例 3=ゆっくり, 6=普通, 15=速い）
                    ballRadius:
                      type: number
                      description: ボールの半径（例 3=小さい, 12=普通, 48=大きい）
                  required:
                    - ballSpeed
                    - ballRadius
              required:
                - name
                - gameOptions
      responses:
        '200':
          description: トーナメント作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  tournamentId:
                    type: string
                    description: 作成されたトーナメントのID
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - tournament
      summary: トーナメント一覧
      description: 全トーナメントの一覧を取得します。
      security:
        - cookieAuth: []
      responses:
        '200':
          description: トーナメント一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    hostId:
                      type: number
                    maxPlayers:
                      type: number
                    currentPlayers:
                      type: number
                    status:
                      type: string
                      enum: [waiting, ready, in_progress, completed]
                    createdAt:
                      type: string
                      format: date-time
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/tournaments/{id}:
    get:
      tags:
        - tournament
      summary: トーナメント詳細
      description: 指定されたトーナメントの詳細情報を取得します。
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: トーナメントID
      responses:
        '200':
          description: トーナメント詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: トーナメントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/tournaments/{id}/join:
    post:
      tags:
        - tournament
      summary: トーナメント参加
      description: 指定されたトーナメントに参加します。
      security:
        - cookieAuth: []
        - testUserAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: トーナメントID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alias:
                  type: string
                  description: プレイヤーのエイリアス名
              required:
                - alias
      responses:
        '200':
          description: 参加成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  tournament:
                    $ref: '#/components/schemas/Tournament'
        '400':
          description: 参加失敗（満員または既に参加済み）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
        '404':
          description: トーナメントが見つかりません

  /api/tournaments/{id}/start:
    post:
      tags:
        - tournament
      summary: トーナメント開始
      description: トーナメントを開始します。作成者のみ実行可能。
      security:
        - cookieAuth: []
        - testUserAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: トーナメントID
      responses:
        '200':
          description: 開始成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: プレイヤー不足
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー
        '403':
          description: 作成者以外は実行不可
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: トーナメントが見つかりません

  /api/tournaments/{id}/matches:
    get:
      tags:
        - tournament
      summary: 対戦カード一覧取得
      description: トーナメントの対戦カード（マッチ）一覧を取得します。
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: トーナメントID
      responses:
        '200':
          description: 対戦カード一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  matches:
                    type: array
                    items:
                      $ref: '#/components/schemas/Match'
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: トーナメントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/tournaments/{id}/matches/{matchId}:
    get:
      tags:
        - tournament
      summary: 試合情報取得
      description: 特定の試合の詳細情報を取得します。試合に参加するプレイヤー情報やトーナメント情報を含みます。
      security:
        - cookieAuth: []
        - testUserAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: トーナメントID
        - name: matchId
          in: path
          required: true
          schema:
            type: string
          description: マッチID
      responses:
        '200':
          description: 試合情報取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  match:
                    $ref: '#/components/schemas/Match'
                  tournament:
                    type: object
                    properties:
                      id:
                        type: string
                        description: トーナメントID
                      name:
                        type: string
                        description: トーナメント名
                    required:
                      - id
                      - name
                required:
                  - match
                  - tournament
        '404':
          description: トーナメントまたはマッチが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー

  /api/tournaments/{id}/matches/{matchId}/start:
    post:
      tags:
        - tournament
      summary: 試合開始
      description: 試合のstatusをin_progressに更新します。フロントエンドは/game/:matchIdにリダイレクトし、直接ゲームサーバーに接続してWebRTCシグナリングを開始します。
      security:
        - cookieAuth: []
        - testUserAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: トーナメントID
        - name: matchId
          in: path
          required: true
          schema:
            type: string
          description: マッチID
      responses:
        '200':
          description: 試合開始成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  matchId:
                    type: string
                    description: マッチID
        '404':
          description: トーナメントまたはマッチが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー

  /api/tournaments/{id}/matches/{matchId}/result:
    post:
      tags:
        - tournament
      summary: 試合結果登録
      description: フロントエンドから試合結果を受信して保存します。
      security:
        - cookieAuth: []
        - testUserAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: トーナメントID
        - name: matchId
          in: path
          required: true
          schema:
            type: string
          description: マッチID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                winnerId:
                  type: number
                  description: 勝者のユーザーID
                score:
                  type: object
                  properties:
                    leftPlayer:
                      type: number
                      description: 左側プレイヤーのスコア
                    rightPlayer:
                      type: number
                      description: 右側プレイヤーのスコア
                  required:
                    - leftPlayer
                    - rightPlayer
              required:
                - winnerId
                - score
      responses:
        '200':
          description: 結果登録成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  match:
                    $ref: '#/components/schemas/Match'
        '404':
          description: トーナメントまたはマッチが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証エラー

  /internal/tournaments/{id}/matches/{matchId}/result:
    post:
      tags:
        - internal
      summary: 試合結果登録（内部API）
      description: ゲームサーバーから試合結果を受信して保存します。INTERNAL_API_SECRETが必要
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: トーナメントID
        - name: matchId
          in: path
          required: true
          schema:
            type: string
          description: マッチID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                winnerId:
                  type: number
                  description: 勝者のユーザーID
                score:
                  type: object
                  properties:
                    leftPlayer:
                      type: number
                      description: 左側プレイヤーのスコア
                    rightPlayer:
                      type: number
                      description: 右側プレイヤーのスコア
                  required:
                    - leftPlayer
                    - rightPlayer
              required:
                - winnerId
                - score
      responses:
        '200':
          description: 結果登録成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                  - success
                  - message
        '400':
          description: バリデーションエラーまたは試合が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 認証エラー（無効なトークン）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: トーナメントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
      description: JWTトークンをhttpOnly cookieで送信
    testUserAuth:
      type: http
      scheme: bearer
      description: テスト用のBearerトークン認証
    mfaTicket:
      type: apiKey
      in: cookie
      name: mfaTicket
      description: MFAチケットをhttpOnly cookieで送信
    bearerAuth:
      type: http
      scheme: bearer
      description: 内部API用のBearer Token認証（INTERNAL_API_SECRET）

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: エラーメッセージ
      required:
        - error

    LoginResponse:
      type: object
      properties:
        needTwoFactor:
          type: boolean
          description: 追加の2要素認証が必要かどうか
        message:
          type: string
          description: ログイン結果メッセージ
      required:
        - needTwoFactor
        - message

    TwoFactorTokenRequest:
      type: object
      properties:
        twoFactorToken:
          type: string
          description: 認証アプリが生成した6桁のTOTPコード
      required:
        - twoFactorToken

    TwoFactorSetupResponse:
      type: object
      properties:
        otpauthUrl:
          type: string
          description: 認証アプリ用のotpauth URL
        qrCode:
          type: string
          description: otpauth URLをエンコードしたData URL形式のQRコード
      required:
        - otpauthUrl
        - qrCode

    TwoFactorValidateResponse:
      type: object
      properties:
        passed:
          type: boolean
          description: トークン検証が成功したかどうか
        message:
          type: string
          description: 検証結果メッセージ
      required:
        - passed
        - message

    User:
      type: object
      properties:
        id:
          type: number
          description: ユーザーID
        name:
          type: string
          description: ユーザー名
        email:
          type: string
          description: メールアドレス
        ft_id:
          type: number
          description: 42 Intra ID
        two_factor_enabled:
          type: boolean
          description: 2FAが有効かどうか
      required:
        - id
        - name
        - email
        - ft_id
        - two_factor_enabled

    Tournament:
      type: object
      properties:
        id:
          type: string
          description: トーナメントID
        name:
          type: string
          description: トーナメント名
        hostId:
          type: number
          description: 作成者のユーザーID
        maxPlayers:
          type: number
          description: 最大プレイヤー数
        players:
          type: array
          items:
            type: object
            properties:
              userId:
                type: number
              alias:
                type: string
            required:
              - userId
              - alias
        status:
          type: string
          enum:
            - waiting
            - ready
            - in_progress
            - completed
          description: トーナメントの状態
        createdAt:
          type: string
          format: date-time
          description: 作成日時
        gameOptions:
          type: object
          description: ゲームオプション
          properties:
            ballSpeed:
              type: number
              description: ボールの速度（例 3=ゆっくり, 6=普通, 15=速い）
            ballRadius:
              type: number
              description: ボールの半径（例 3=小さい, 12=普通, 48=大きい）
          required:
            - ballSpeed
            - ballRadius
      required:
        - id
        - name
        - hostId
        - maxPlayers
        - players
        - status
        - createdAt
        - gameOptions

    Match:
      type: object
      properties:
        id:
          type: string
          description: マッチID
        round:
          type: string
          enum:
            - semifinals
            - finals
            - third_place
          description: ラウンド
        leftPlayer:
          type: object
          properties:
            userId:
              type: number
            alias:
              type: string
          required:
            - userId
            - alias
        rightPlayer:
          type: object
          properties:
            userId:
              type: number
            alias:
              type: string
          required:
            - userId
            - alias
        status:
          type: string
          enum:
            - pending
            - in_progress
            - completed
          description: 試合状態
        score:
          type: object
          properties:
            leftPlayer:
              type: number
              description: 左側プレイヤーのスコア
            rightPlayer:
              type: number
              description: 右側プレイヤーのスコア
          required:
            - leftPlayer
            - rightPlayer
        gameOptions:
          type: object
          description: ゲームオプション
          properties:
            ballSpeed:
              type: number
              description: ボールの速度（例 3=ゆっくり, 6=普通, 15=速い）
            ballRadius:
              type: number
              description: ボールの半径（例 3=小さい, 12=普通, 48=大きい）
          required:
            - ballSpeed
            - ballRadius
      required:
        - id
        - round
        - leftPlayer
        - rightPlayer
        - status
        - gameOptions
